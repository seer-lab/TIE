JavaPathfinder v4.1 - (C) 1999-2007 RIACS/NASA Ames Research Center


====================================================== system under test
application: oldclassic.java

====================================================== search started: 12/7/09 10:14 PM

====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2678 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:59             : class Event {
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:59             : class Event {
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [190 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [143 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #1 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:99             : while (true) {
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:125            : while (true) {
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:99             : while (true) {
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #21 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:125            : while (true) {
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:99             : while (true) {
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #28 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:125            : while (true) {
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== error #1
gov.nasa.jpf.jvm.NotDeadlockedProperty
deadlock encountered:
  thread index=0,name=main,status=TERMINATED,this=null,target=null,priority=5,lockCount=0
  thread index=1,name=Thread-0,status=WAITING,this=FirstTask@282,priority=5,lockCount=1
  thread index=2,name=Thread-1,status=WAITING,this=SecondTask@306,priority=5,lockCount=1


====================================================== snapshot #1
thread index=1,name=Thread-0,status=WAITING,this=FirstTask@282,priority=5,lockCount=1
  waiting on: Event@274
  call stack:
	at Event.wait_for_event(oldclassic.java:79)
	at FirstTask.run(oldclassic.java:103)

thread index=2,name=Thread-1,status=WAITING,this=SecondTask@306,priority=5,lockCount=1
  waiting on: Event@275
  call stack:
	at Event.wait_for_event(oldclassic.java:79)
	at SecondTask.run(oldclassic.java:130)


====================================================== results
error #1: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:   thread index=0,name=main,s..."

====================================================== statistics
elapsed time:       0:00:00
states:             new=36, visited=3, backtracked=6, end=1
search:             maxDepth=32, constraints=0
choice generators:  thread=36, data=0
heap:               gc=31, new=301, free=11
instructions:       3434
max memory:         5MB
loaded code:        classes=72, methods=986

====================================================== search finished: 12/7/09 10:14 PM
