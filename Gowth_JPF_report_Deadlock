JavaPathfinder v4.1 - (C) 1999-2007 RIACS/NASA Ames Research Center


====================================================== system under test
application: gov\nasa\jpf\mc\TestVMDeadlock.java
arguments:   testNestedMonitorLockoutDeadlock 

====================================================== search started: 12/7/09 10:12 PM

====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2679 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:51 : static Object lock1 = new Object();
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:51 : static Object lock1 = new Object();
  gov\nasa\jpf\mc\TestVMDeadlock.java:52 : static Object lock2 = new Object();
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:52 : static Object lock2 = new Object();
  gov\nasa\jpf\mc\TestVMDeadlock.java:89 : static Object lock = new Object();
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:89 : static Object lock = new Object();
  gov\nasa\jpf\mc\TestVMDeadlock.java:90 : static Object sig = new Object();
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:90 : static Object sig = new Object();
  gov\nasa\jpf\mc\TestVMDeadlock.java:41 : public class TestVMDeadlock extends RawTest {
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:44 : TestVMDeadlock t = new TestVMDeadlock();
  gov\nasa\jpf\mc\TestVMDeadlock.java:41 : public class TestVMDeadlock extends RawTest {
  gov\nasa\jpf\jvm\RawTest.java:29 : public class RawTest {
      [1 insn w/o sources]
  gov\nasa\jpf\jvm\RawTest.java:29 : public class RawTest {
  gov\nasa\jpf\mc\TestVMDeadlock.java:41 : public class TestVMDeadlock extends RawTest {
  gov\nasa\jpf\mc\TestVMDeadlock.java:44 : TestVMDeadlock t = new TestVMDeadlock();
  gov\nasa\jpf\mc\TestVMDeadlock.java:45 : if (!runSelectedTest(args, t)){
  gov\nasa\jpf\jvm\RawTest.java:95 : Class<?> testCls = testObject.getClass();
  gov\nasa\jpf\jvm\RawTest.java:96 : Object[] argValues = getArgumentValues(args);
  gov\nasa\jpf\jvm\RawTest.java:41 : if (args.length == 0){
  gov\nasa\jpf\jvm\RawTest.java:46 : Object[] a = new Object[args.length-1];
  gov\nasa\jpf\jvm\RawTest.java:49 : for (int i=1, j=0; i<args.length; i++, j++){
  gov\nasa\jpf\jvm\RawTest.java:71 : return a;
  gov\nasa\jpf\jvm\RawTest.java:96 : Object[] argValues = getArgumentValues(args);
  gov\nasa\jpf\jvm\RawTest.java:97 : Class<?>[] argTypes = getArgumentTypes(argValues);
  gov\nasa\jpf\jvm\RawTest.java:76 : Class<?>[] t = new Class<?>[argValues.length];
  gov\nasa\jpf\jvm\RawTest.java:78 : for (int i=0; i<argValues.length; i++){
  gov\nasa\jpf\jvm\RawTest.java:91 : return t;
  gov\nasa\jpf\jvm\RawTest.java:97 : Class<?>[] argTypes = getArgumentTypes(argValues);
  gov\nasa\jpf\jvm\RawTest.java:99 : if (args.length > 0) {
  gov\nasa\jpf\jvm\RawTest.java:100 : String func = args[0];
  gov\nasa\jpf\jvm\RawTest.java:103 : Method m = testCls.getMethod(func, argTypes);
  gov\nasa\jpf\jvm\RawTest.java:105 : System.out.println("-- running test: " + m.getName());
      [46 insn w/o sources]
  gov\nasa\jpf\jvm\RawTest.java:105 : System.out.println("-- running test: " + m.getName());
      [22 insn w/o sources]
  gov\nasa\jpf\jvm\RawTest.java:105 : System.out.println("-- running test: " + m.getName());
  gov\nasa\jpf\jvm\RawTest.java:106 : m.invoke(testObject, argValues);
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:93 : Thread t1 = new Thread(new Runnable() {
  gov\nasa\jpf\mc\TestVMDeadlock.java:1 : //
  gov\nasa\jpf\mc\TestVMDeadlock.java:93 : Thread t1 = new Thread(new Runnable() {
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:93 : Thread t1 = new Thread(new Runnable() {
      [142 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:93 : Thread t1 = new Thread(new Runnable() {
  gov\nasa\jpf\mc\TestVMDeadlock.java:108 : Thread t2 = new Thread(new Runnable() {
  gov\nasa\jpf\mc\TestVMDeadlock.java:1 : //
  gov\nasa\jpf\mc\TestVMDeadlock.java:108 : Thread t2 = new Thread(new Runnable() {
      [1 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:108 : Thread t2 = new Thread(new Runnable() {
      [142 insn w/o sources]
  gov\nasa\jpf\mc\TestVMDeadlock.java:108 : Thread t2 = new Thread(new Runnable() {
  gov\nasa\jpf\mc\TestVMDeadlock.java:121 : t1.start();
  gov\nasa\jpf\mc\TestVMDeadlock.java:122 : t2.start();
  gov\nasa\jpf\mc\TestVMDeadlock.java:123 : }
      [1 insn w/o sources]
  gov\nasa\jpf\jvm\RawTest.java:106 : m.invoke(testObject, argValues);
  gov\nasa\jpf\jvm\RawTest.java:118 : return true;
  gov\nasa\jpf\mc\TestVMDeadlock.java:45 : if (!runSelectedTest(args, t)){
  gov\nasa\jpf\mc\TestVMDeadlock.java:49 : }
------------------------------------------------------ transition #1 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  gov\nasa\jpf\mc\TestVMDeadlock.java:95 : for (int i=0; i<3; i++) {
  gov\nasa\jpf\mc\TestVMDeadlock.java:96 : synchronized (lock) {
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  gov\nasa\jpf\mc\TestVMDeadlock.java:96 : synchronized (lock) {
  gov\nasa\jpf\mc\TestVMDeadlock.java:97 : synchronized (sig) {
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  gov\nasa\jpf\mc\TestVMDeadlock.java:97 : synchronized (sig) {
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  gov\nasa\jpf\mc\TestVMDeadlock.java:99 : sig.wait();
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  gov\nasa\jpf\mc\TestVMDeadlock.java:110 : for (int i=0; i<2; i++){
  gov\nasa\jpf\mc\TestVMDeadlock.java:111 : synchronized (sig) {
  gov\nasa\jpf\mc\TestVMDeadlock.java:112 : synchronized(lock){

====================================================== error #1
gov.nasa.jpf.jvm.NotDeadlockedProperty
deadlock encountered:
  thread index=0,name=main,status=TERMINATED,this=null,target=null,priority=5,lockCount=0
  thread index=1,name=Thread-0,status=WAITING,this=java.lang.Thread@309,target=gov.nasa.jpf.mc.TestVMDeadlock$3@316,priority=5,lockCount=1
  thread index=2,name=Thread-1,status=BLOCKED,this=java.lang.Thread@327,target=gov.nasa.jpf.mc.TestVMDeadlock$4@331,priority=5,lockCount=0


====================================================== snapshot #1
thread index=1,name=Thread-0,status=WAITING,this=java.lang.Thread@309,target=gov.nasa.jpf.mc.TestVMDeadlock$3@316,priority=5,lockCount=1
  owned locks:java.lang.Object@279
  waiting on: java.lang.Object@279
  call stack:
	at gov.nasa.jpf.mc.TestVMDeadlock$3.run(TestVMDeadlock.java:99)

thread index=2,name=Thread-1,status=BLOCKED,this=java.lang.Thread@327,target=gov.nasa.jpf.mc.TestVMDeadlock$4@331,priority=5,lockCount=0
  owned locks:java.lang.Object@279
  blocked on: java.lang.Object@278
  call stack:
	at gov.nasa.jpf.mc.TestVMDeadlock$4.run(TestVMDeadlock.java:112)


====================================================== thread ops #1
   2       1     trans    insn     loc
------- ------- -----------------------
B:278      |         5 monitorent gov\nasa\jpf\mc\TestVMDeadlock.java:112 : synchronized(lock){
   |    W:279        4 invokevirt gov\nasa\jpf\mc\TestVMDeadlock.java:99 : sig.wait();
   |    L:278        2 monitorent gov\nasa\jpf\mc\TestVMDeadlock.java:96 : synchronized (lock) {
   S       |         0
   |       S         0

====================================================== results
error #1: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:   thread index=0,name=main,s..."

====================================================== statistics
elapsed time:       0:00:00
states:             new=6, visited=0, backtracked=0, end=1
search:             maxDepth=5, constraints=0
choice generators:  thread=6, data=0
heap:               gc=8, new=320, free=23
instructions:       3214
max memory:         6MB
loaded code:        classes=76, methods=1018

====================================================== search finished: 12/7/09 10:12 PM
