JavaPathfinder v5.0 - (C) 1999-2007 RIACS/NASA Ames Research Center


====================================================== system under test
application: oldclassic.java

====================================================== search started: 2/24/10 6:39 PM

====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #1
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        37 invokevirt oldclassic.java:79 : wait();
   |    W:290       36 invokevirt oldclassic.java:79 : wait();
A:290      |        35 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291       28 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #2
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #34 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #2
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |        39 invokevirt oldclassic.java:79 : wait();
   |    A:290       35 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #3
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #3
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        40 invokevirt oldclassic.java:79 : wait();
   |    B:290       35 invokevirt oldclassic.java:103 : event1.wait_for_event();
L:290      |        35    aload_0 oldclassic.java:71 : count = (count + 1) % 3;
   |    A:291       28 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #4
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #4
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        54 invokevirt oldclassic.java:79 : wait();
   |    W:290       53 invokevirt oldclassic.java:79 : wait();
   |    A:291       51 invokevirt oldclassic.java:74 : notifyAll();
A:290      |        47 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #5
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #40 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #5
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        55 invokevirt oldclassic.java:79 : wait();
   |    A:291       51 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #6
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #6
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        56 invokevirt oldclassic.java:79 : wait();
   |    A:291       51 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #7
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #7
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        67 invokevirt oldclassic.java:79 : wait();
   |    W:290       66 invokevirt oldclassic.java:79 : wait();
A:290      |        65 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291       58 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #8
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #45 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #8
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |        69 invokevirt oldclassic.java:79 : wait();
   |    A:290       65 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #9
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #9
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        70 invokevirt oldclassic.java:79 : wait();
   |    B:290       65 invokevirt oldclassic.java:103 : event1.wait_for_event();
L:290      |        65    aload_0 oldclassic.java:71 : count = (count + 1) % 3;
   |    A:291       58 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #10
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #10
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        84 invokevirt oldclassic.java:79 : wait();
   |    W:290       83 invokevirt oldclassic.java:79 : wait();
   |    A:291       81 invokevirt oldclassic.java:74 : notifyAll();
A:290      |        77 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #11
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #49 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #11
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        85 invokevirt oldclassic.java:79 : wait();
   |    A:291       81 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #12
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #48 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #12
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        86 invokevirt oldclassic.java:79 : wait();
   |    A:291       81 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #13
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #13
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |        97 invokevirt oldclassic.java:79 : wait();
   |    W:290       96 invokevirt oldclassic.java:79 : wait();
A:290      |        95 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291       88 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #14
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #14
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |        99 invokevirt oldclassic.java:79 : wait();
   |    A:290       95 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #15
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #15
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       100 invokevirt oldclassic.java:79 : wait();
   |    B:290       95 invokevirt oldclassic.java:103 : event1.wait_for_event();
L:290      |        95    aload_0 oldclassic.java:71 : count = (count + 1) % 3;
   |    A:291       88 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #16
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #57 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #58 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #59 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #16
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       114 invokevirt oldclassic.java:79 : wait();
   |    W:290      113 invokevirt oldclassic.java:79 : wait();
   |    A:291      111 invokevirt oldclassic.java:74 : notifyAll();
A:290      |       107 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #17
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #57 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #58 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #60 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #17
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       115 invokevirt oldclassic.java:79 : wait();
   |    A:291      111 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #18
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #49 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #57 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #59 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #18
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       116 invokevirt oldclassic.java:79 : wait();
   |    A:291      111 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #19
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #19
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       150 invokevirt oldclassic.java:79 : wait();
   |    W:290      149 invokevirt oldclassic.java:79 : wait();
A:290      |       146 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #20
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #20
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       152 invokevirt oldclassic.java:79 : wait();
   |    A:290      146 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #21
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #21
   2     trans    insn     loc
------- -----------------------
W:291      153 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #22
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #22
   2     trans    insn     loc
------- -----------------------
W:291      155 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #23
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #23
   2     trans    insn     loc
------- -----------------------
W:291      157 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #24
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #3 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #24
   2     trans    insn     loc
------- -----------------------
W:291      164 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #25
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #25
   2     trans    insn     loc
------- -----------------------
W:291      173 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #26
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #26
   2     trans    insn     loc
------- -----------------------
W:291      212 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #27
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #27
   2     trans    insn     loc
------- -----------------------
W:291      214 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #28
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #40 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #28
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       289 invokevirt oldclassic.java:79 : wait();
   |    A:291      258 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #29
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #29
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       291 invokevirt oldclassic.java:79 : wait();
   |    A:291      258 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #30
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #60 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #63 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #30
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       369 invokevirt oldclassic.java:79 : wait();
   |    A:291      338 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #31
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #62 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #31
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       371 invokevirt oldclassic.java:79 : wait();
   |    A:291      338 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #32
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #86 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #87 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #89 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #32
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       457 invokevirt oldclassic.java:79 : wait();
   |    A:290      455 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #33
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #86 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #88 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #89 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #90 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #33
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       458 invokevirt oldclassic.java:79 : wait();
   |    A:290      455 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #34
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #86 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #88 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #89 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #90 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #91 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #92 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #34
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       458 invokevirt oldclassic.java:79 : wait();
   |    A:290      455 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #35
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #86 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #88 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #89 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #90 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #91 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #92 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #93 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #35
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       465 invokevirt oldclassic.java:79 : wait();
   |    W:290      458 invokevirt oldclassic.java:79 : wait();
A:290      |       455 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291      418 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #36
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #106 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #107 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #109 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #36
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       559 invokevirt oldclassic.java:79 : wait();
   |    A:290      557 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #37
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #106 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #108 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #109 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #110 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #37
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       560 invokevirt oldclassic.java:79 : wait();
   |    A:290      557 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #38
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #106 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #108 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #109 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #110 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #111 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #112 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #38
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       560 invokevirt oldclassic.java:79 : wait();
   |    A:290      557 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #39
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #106 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #108 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #109 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #110 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #111 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #112 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #113 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #39
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       567 invokevirt oldclassic.java:79 : wait();
   |    W:290      560 invokevirt oldclassic.java:79 : wait();
A:290      |       557 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291      537 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #40
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #117 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #126 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #127 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #129 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #40
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       657 invokevirt oldclassic.java:79 : wait();
   |    A:290      655 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #41
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #117 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #126 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #128 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #129 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #130 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #41
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       658 invokevirt oldclassic.java:79 : wait();
   |    A:290      655 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #42
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #117 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #126 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #128 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #129 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #130 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #131 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #132 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #42
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       658 invokevirt oldclassic.java:79 : wait();
   |    A:290      655 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #43
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #117 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #126 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #128 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #129 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #130 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #131 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #132 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #133 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #43
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       665 invokevirt oldclassic.java:79 : wait();
   |    W:290      658 invokevirt oldclassic.java:79 : wait();
A:290      |       655 invokevirt oldclassic.java:74 : notifyAll();
   |    A:291      635 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #44
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #44
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       834 invokevirt oldclassic.java:79 : wait();
   |    A:290      820 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #45
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #216 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #45
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       836 invokevirt oldclassic.java:79 : wait();
   |    A:290      820 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #46
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #216 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #217 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #219 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #46
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       854 invokevirt oldclassic.java:79 : wait();
   |    A:291      851 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #47
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #217 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #220 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #47
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       858 invokevirt oldclassic.java:79 : wait();
   |    A:291      851 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #48
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #219 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #222 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #48
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       863 invokevirt oldclassic.java:79 : wait();
   |    A:291      851 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #49
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #219 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #220 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #223 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #49
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       867 invokevirt oldclassic.java:79 : wait();
   |    W:290      865 invokevirt oldclassic.java:79 : wait();
   |    A:291      851 invokevirt oldclassic.java:74 : notifyAll();
A:290      |       820 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #50
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #50
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       928 invokevirt oldclassic.java:79 : wait();
   |    A:290      914 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #51
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #239 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #51
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |       930 invokevirt oldclassic.java:79 : wait();
   |    A:290      914 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #52
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #239 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #240 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #242 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #52
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       948 invokevirt oldclassic.java:79 : wait();
   |    A:291      945 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #53
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #240 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #243 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #53
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       952 invokevirt oldclassic.java:79 : wait();
   |    A:291      945 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #54
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #242 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #245 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #54
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       957 invokevirt oldclassic.java:79 : wait();
   |    A:291      945 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #55
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #242 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #243 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #246 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #55
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |       961 invokevirt oldclassic.java:79 : wait();
   |    W:290      959 invokevirt oldclassic.java:79 : wait();
   |    A:291      945 invokevirt oldclassic.java:74 : notifyAll();
A:290      |       914 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #56
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #261 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #56
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |      1022 invokevirt oldclassic.java:79 : wait();
   |    A:290     1008 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #57
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #260 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #262 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #57
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |      1024 invokevirt oldclassic.java:79 : wait();
   |    A:290     1008 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #58
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #262 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #263 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #264 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #265 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #58
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |      1042 invokevirt oldclassic.java:79 : wait();
   |    A:291     1039 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #59
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #262 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #263 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #264 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #265 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #266 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #59
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |      1046 invokevirt oldclassic.java:79 : wait();
   |    A:291     1039 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #60
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #262 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #263 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #264 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #265 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #266 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #267 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #268 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #60
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |      1051 invokevirt oldclassic.java:79 : wait();
   |    A:291     1039 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #61
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #12 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #13 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #55 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #56 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #75 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #76 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #77 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #78 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #79 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #80 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #81 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #82 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #83 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #84 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #85 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #96 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #97 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #98 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #100 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #101 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #102 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #103 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #104 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #105 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #156 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #157 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #158 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #159 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #160 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #161 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #162 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #163 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #164 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #165 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #176 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #177 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #178 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #179 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #180 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #181 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #182 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #183 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #184 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #185 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #195 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #196 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #197 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #198 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #199 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #200 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #201 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #202 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #203 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #204 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #205 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #213 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #214 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #218 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #219 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #220 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #221 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #222 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #223 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #224 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #225 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #226 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #227 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #228 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #236 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #237 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #241 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:79             : wait();
  oldclassic.java:81             : }
  oldclassic.java:82             : }
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #242 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #243 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
------------------------------------------------------ transition #244 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:133            : count = event2.count;        // <race> ditto
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #245 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #246 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #247 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #248 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #249 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #250 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #251 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #252 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:106            : count = event1.count;        // <race> ditto
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:107            : event2.signal_event();       // updates event2.count
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #262 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #263 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #264 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #265 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #266 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #267 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #268 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #269 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #61
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |      1055 invokevirt oldclassic.java:79 : wait();
   |    W:290     1053 invokevirt oldclassic.java:79 : wait();
   |    A:291     1039 invokevirt oldclassic.java:74 : notifyAll();
A:290      |      1008 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== trace #62
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #62
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |      1219 invokevirt oldclassic.java:79 : wait();
   |    A:290     1215 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #63
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #14 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #63
   2     trans    insn     loc
------- -----------------------
W:291     1224 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #64
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #15 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #64
   2     trans    insn     loc
------- -----------------------
W:291     1229 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #65
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #16 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #17 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #65
   2     trans    insn     loc
------- -----------------------
W:291     1234 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #66
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #17 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #18 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #19 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #20 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {Thread-0,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-0}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #66
   2     trans    insn     loc
------- -----------------------
W:291     1240 invokevirt oldclassic.java:79 : wait();
   S         1

====================================================== trace #67
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #19 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #20 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #21 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #67
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |      1242 invokevirt oldclassic.java:79 : wait();
   |    A:290     1215 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #68
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #19 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #20 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #22 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-1}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();

====================================================== thread ops #68
   1       2     trans    insn     loc
------- ------- -----------------------
W:290      |      1242 invokevirt oldclassic.java:79 : wait();
   |    A:290     1215 invokevirt oldclassic.java:74 : notifyAll();
   |       S         1
   S       |         0

====================================================== trace #69
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
      [2843 insn w/o sources]
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:47             : Event      new_event1 = new Event();
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:59             : class Event {
      [1 insn w/o sources]
  oldclassic.java:60             : int count = 0;
  oldclassic.java:48             : Event      new_event2 = new Event();
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:91             : public FirstTask (Event e1, Event e2) {
      [181 insn w/o sources]
  oldclassic.java:89             : int   count = 0;  // bad optimization - local cache of event1 internals
  oldclassic.java:92             : this.event1 = e1;
  oldclassic.java:93             : this.event2 = e2;
  oldclassic.java:94             : }
  oldclassic.java:50             : FirstTask  task1 = new FirstTask(new_event1, new_event2);
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:117            : public SecondTask (Event e1, Event e2) {
      [134 insn w/o sources]
  oldclassic.java:115            : int   count = 0;  // bad optimization - local cache of event2 internals
  oldclassic.java:118            : this.event1 = e1;
  oldclassic.java:119            : this.event2 = e2;
  oldclassic.java:120            : }
  oldclassic.java:51             : SecondTask task2 = new SecondTask(new_event1, new_event2);
  oldclassic.java:53             : task1.start();
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main,Thread-0}
  oldclassic.java:53             : task1.start();
  oldclassic.java:54             : task2.start();
------------------------------------------------------ transition #2 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #4 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #5 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #6 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
------------------------------------------------------ transition #7 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:123            : count = event2.count;          // <race> violates event2 monitor encapsulation
  oldclassic.java:126            : System.out.println("  2");
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #8 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
------------------------------------------------------ transition #9 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:127            : event1.signal_event();       // updates event1.count
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #10 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
------------------------------------------------------ transition #11 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,Thread-0,>Thread-1}
  oldclassic.java:71             : count = (count + 1) % 3;
  oldclassic.java:74             : notifyAll();
  oldclassic.java:75             : }
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:97             : count = event1.count;          // <race> violates event1 monitor encapsulation
  oldclassic.java:100            : System.out.println("1");
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:102            : if (count == event1.count) { // <race> ditto
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-0,Thread-1}
  oldclassic.java:103            : event1.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #19 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #20 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
------------------------------------------------------ transition #21 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:129            : if (count == event2.count) { // <race> ditto
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #22 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
------------------------------------------------------ transition #23 thread: 2
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {main,>Thread-1}
  oldclassic.java:130            : event2.wait_for_event();
  oldclassic.java:79             : wait();
------------------------------------------------------ transition #24 thread: 0
gov.nasa.jpf.jvm.choice.ThreadChoiceFromSet {>main}
  oldclassic.java:54             : task2.start();
  oldclassic.java:55             : }

====================================================== thread ops #69
   2       1     trans    insn     loc
------- ------- -----------------------
W:291      |      1249 invokevirt oldclassic.java:79 : wait();
   |    W:290     1242 invokevirt oldclassic.java:79 : wait();
A:290      |      1215 invokevirt oldclassic.java:74 : notifyAll();
   S       |         1
   |       S         0

====================================================== results
error #1: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #2: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #3: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #4: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #5: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #6: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #7: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #8: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #9: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #10: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #11: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #12: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #13: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #14: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #15: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #16: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #17: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #18: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #19: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #20: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #21: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #22: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #23: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #24: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #25: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #26: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #27: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #28: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #29: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #30: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #31: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #32: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #33: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #34: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #35: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #36: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #37: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #38: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #39: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #40: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #41: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #42: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #43: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #44: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #45: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #46: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #47: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #48: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #49: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #50: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #51: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #52: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #53: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #54: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #55: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #56: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #57: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #58: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #59: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #60: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #61: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #62: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #63: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #64: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #65: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #66: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #67: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #68: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."
error #69: gov.nasa.jpf.jvm.NotDeadlockedProperty "deadlock encountered:    thread index=0,name=main,..."

====================================================== statistics
elapsed time:       0:00:01
states:             new=1346, visited=1684, backtracked=3029, end=69
search:             maxDepth=268, constraints=0
choice generators:  thread=1340, data=0
heap:               gc=2599, new=695, free=3346
instructions:       15115
max memory:         6MB
loaded code:        classes=76, methods=1015

====================================================== search finished: 2/24/10 6:39 PM
